const fs = require('fs');
const path = require('path');
const crypto = require('crypto');

const root = path.join(__dirname, '..');
const envLocalPath = path.join(root, '.env.local');
const examplePath = path.join(root, '.env.example');

function randomSecret(bytes = 32) {
  try {
    return crypto.randomBytes(bytes).toString('base64');
  } catch {
    return Math.random().toString(36).slice(2) + Math.random().toString(36).slice(2);
  }
}

if (fs.existsSync(envLocalPath)) {
  console.log('✅ .env.local already exists. Skipping creation.');
  process.exit(0);
}

// Start with example contents if available
let out = '';
if (fs.existsSync(examplePath)) {
  const example = fs.readFileSync(examplePath, 'utf8');
  out += `# Generated by scripts/ensure-env.js\n`;
  out += `# Values are safe placeholders for local dev.\n\n`;

  // Very light transform: keep keys, fill known safe defaults
  const lines = example.split(/\r?\n/);
  for (const line of lines) {
    if (!line || line.trim().startsWith('#')) {
      out += line + '\n';
      continue;
    }
    const [key] = line.split('=');
    switch (key) {
      case 'AUTH_SECRET':
        out += `AUTH_SECRET=${randomSecret()}\n`;
        break;
      case 'DATABASE_URL':
      case 'DATABASE_URL_NON_POOLING':
        // Leave empty so DB-backed routes can be avoided in dev
        out += `${key}=""\n`;
        break;
      case 'AUTH_REDIRECT_PROXY_URL':
        out += `AUTH_REDIRECT_PROXY_URL=http://localhost:3000/api/auth\n`;
        break;
      case 'NEXT_PUBLIC_GET_IN_TOUCH':
      case 'OAUTH_CLIENT_KEY':
      case 'OAUTH_CLIENT_SECRET':
      case 'RESEND_SECRET':
        out += `${key}=""\n`;
        break;
      default:
        out += line + '\n';
    }
  }
} else {
  // Minimal set if example is missing
  out = `# Generated by scripts/ensure-env.js\n` +
        `AUTH_SECRET=${randomSecret()}\n` +
        `AUTH_REDIRECT_PROXY_URL=http://localhost:3000/api/auth\n` +
        `DATABASE_URL=""\n` +
        `DATABASE_URL_NON_POOLING=""\n` +
        `NEXT_PUBLIC_GET_IN_TOUCH=""\n` +
        `RESEND_SECRET=""\n`;
}

fs.writeFileSync(envLocalPath, out, 'utf8');
console.log('✅ Created .env.local with safe defaults.');

