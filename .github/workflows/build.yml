name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install LaTeX
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-base texlive-fonts-recommended texlive-latex-extra texlive-fonts-extra
    
    - name: Check if CV source changed
      id: cv-changes
      run: |
        # Handle first run case where github.event.before might be null
        if [ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ] || [ -z "${{ github.event.before }}" ]; then
          echo "cv-changed=true" >> $GITHUB_OUTPUT
          echo "üÜï First run detected, will build CV"
        elif git diff --name-only ${{ github.event.before }}..${{ github.sha }} | grep -E '^cv-source/'; then
          echo "cv-changed=true" >> $GITHUB_OUTPUT
          echo "üìù CV source files changed, will rebuild"
        else
          echo "cv-changed=false" >> $GITHUB_OUTPUT
          echo "üìÑ No CV source changes detected"
        fi
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build CV from LaTeX
      id: build-cv
      run: npm run build-cv
      continue-on-error: true
    
    - name: Download fallback CV if build failed
      if: steps.build-cv.outcome == 'failure'
      run: |
        echo "LaTeX build failed, attempting to download fallback CV..."
        mkdir -p public/files/
        if curl -L -o public/files/cv.pdf \
          "https://github.com/${{ github.repository }}/releases/latest/download/cv.pdf"; then
          echo "Successfully downloaded fallback CV"
        else
          echo "Error: CV build failed and no fallback available"
          if [ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ] || [ -z "${{ github.event.before }}" ]; then
            echo "This appears to be the first run - LaTeX build must succeed for initial deployment"
          fi
          exit 1
        fi
    
    - name: Verify CV exists
      run: |
        if [ ! -f "public/files/cv.pdf" ]; then
          echo "Error: No CV PDF found after build process"
          exit 1
        fi
        echo "CV PDF verified: $(ls -la public/files/cv.pdf)"
        
        # Check if this is a newly built CV or fallback
        if [ "${{ steps.build-cv.outcome }}" == "success" ]; then
          echo "‚úÖ Using newly built CV from LaTeX source"
          if [ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ] || [ -z "${{ github.event.before }}" ]; then
            echo "üÜï Initial CV build - first deployment"
          elif [ "${{ steps.cv-changes.outputs.cv-changed }}" == "true" ]; then
            echo "üîÑ CV was rebuilt due to source changes"
          else
            echo "üîÅ CV was rebuilt (no source changes, but LaTeX available)"
          fi
        else
          echo "‚ö†Ô∏è Using fallback CV from previous release"
          echo "üö® LaTeX build failed - check the build logs above"
        fi
    
    - name: Build Next.js application
      run: npm run build-only
    
    - name: Upload CV artifact for future builds
      uses: actions/upload-artifact@v4
      with:
        name: cv-pdf
        path: public/files/cv.pdf
        retention-days: 90
      
    - name: Create/Update CV Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.build-cv.outcome == 'success'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: cv-latest
        name: "Latest CV"
        body: |
          Auto-generated CV from LaTeX source
          
          Generated from commit: ${{ github.sha }}
          Build time: ${{ github.event.head_commit.timestamp }}
        files: public/files/cv.pdf
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Comment on build result
      if: github.event_name == 'push'
      run: |
        if [ "${{ steps.build-cv.outcome }}" == "success" ]; then
          echo "üéâ CV successfully built from LaTeX and released!"
        else
          echo "‚ö†Ô∏è CV build failed, used fallback version for deployment"
        fi